get-cache: &get-cache
  restore_cache:
    key: dependencies-{{ checksum "package.json" }}
save-cache: &save-cache
  save_cache:
    paths:
      - node_modules
    key: dependencies-{{ checksum "package.json" }}

version: 2
jobs:
  # build is a reserved job name for running circleci locally
  build:
    docker:
      - image: circleci/node:9.3
    working_directory: ~/project
    steps:
      - checkout
      - <<: *get-cache
      - run:
          name: Install dependencies
          command: yarn install
      - <<: *save-cache
      - run:
          name: Lint source
          command: yarn lint
      - run:
          name: Type check
          command: yarn flow
      - run:
          name: Unit test
          command: yarn test
      - run:
          name: Generate .env
          command: node ./scripts/generate-dotenv.js
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
            - .env
      - store_test_results:
          path: ~/project/junit.xml

  alpha-android:
    working_directory: ~/project/android
    docker:
      - image: circleci/android:api-27-node8-alpha
    steps:
      - checkout:
          path: ~/project
      - attach_workspace:
          at: ~/project
      - run: git clone git@github.com:redbadger/pride-android-secrets.git
      - run: mkdir -p .gradle 
      - run: echo -e "keystore=$ANDROID_KEYSTORE_PATH\nkeystore.alias=$ANDROID_KEYSTORE_ALIAS\nkeystore.password=$ANDROID_KEYSTORE_PASSWORD\nkeystore.keypass=$ANDROID_KEYSTORE_PASSWORD\nversionCode=$CIRCLE_BUILD_NUM" >> .gradle/gradle.properties
      - run: echo -e "apiSecret=$FABRIC_BUILD_SECRET\napiKey=$FABRIC_API_KEY" >> ./app/fabric.properties
      - run: bundle install
      - run: 
            command: |
                bundle exec fastlane alpha \
                submit:true \
                api_token:$HOCKEY_APP_TOKEN \
                app_id:$HOCKEY_APP_ANDROID_ALPHA_APP_ID \
                fabric_api_token:$FABRIC_API_KEY \
                fabric_build_secret:$FABRIC_BUILD_SECRET \
                fabric_groups:$FABRIC_GROUPS \
                commit_sha:$CIRCLE_SHA1 
      - store_artifacts:
          path: ~/project/android/app/build/outputs

  beta-android:
    working_directory: ~/project/android
    docker:
      - image: circleci/android:api-27-node8-alpha
    steps:
      - checkout:
          path: ~/project
      - attach_workspace:
          at: ~/project
      - run: git clone git@github.com:redbadger/pride-android-secrets.git
      - run: mkdir -p .gradle 
      - run: echo -e "keystore=$ANDROID_KEYSTORE_PATH\nkeystore.alias=$ANDROID_KEYSTORE_ALIAS\nkeystore.password=$ANDROID_KEYSTORE_PASSWORD\nkeystore.keypass=$ANDROID_KEYSTORE_PASSWORD\nversionCode=$CIRCLE_BUILD_NUM" >> .gradle/gradle.properties
      - run: echo -e "apiSecret=$FABRIC_BUILD_SECRET\napiKey=$FABRIC_API_KEY" >> ./app/fabric.properties
      - run: bundle install
      - run: 
            command: |
                bundle exec fastlane beta \
                submit:true \
                api_token:$HOCKEY_APP_TOKEN \
                app_id:$HOCKEY_APP_ANDROID_BETA_APP_ID \
                fabric_api_token:$FABRIC_API_KEY \
                fabric_build_secret:$FABRIC_BUILD_SECRET \
                fabric_groups:$FABRIC_GROUPS \
                commit_sha:$CIRCLE_SHA1
      - store_artifacts:
          path: ~/project/android/app/build/outputs

  alpha-ios:
    macos:
      xcode: "9.2.0"
    working_directory: /Users/distiller/project/ios
    environment:
      FL_OUTPUT_DIR: /Users/distiller/project/output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: /Users/distiller/project
      - run:
          name: Set Ruby Version
          command:  echo "ruby-2.4" > ~/.ruby-version
      # Not using a workspace here as Node and Yarn versions
      # differ between the macOS image and the Docker containers above.
      - run: yarn
      - run:
          name: Generate .env
          command: node ./scripts/generate-dotenv.js
          working_directory: /Users/distiller/project
      - run: bundle install
      - run: echo -e "$FABRIC_API_KEY\n$FABRIC_BUILD_SECRET" >> ./PrideLondonApp/fabric.properties
      - run: 
            command: |
                bundle exec fastlane alpha \
                submit:true \
                api_token:$HOCKEY_APP_TOKEN \
                app_id:$HOCKEY_APP_IOS_ALPHA_APP_ID \
                fabric_api_token:$FABRIC_API_KEY \
                fabric_build_secret:$FABRIC_BUILD_SECRET \
                fabric_groups:$FABRIC_GROUPS \
                ci_build_num:$CIRCLE_BUILD_NUM \
                commit_sha:$CIRCLE_SHA1
      - store_artifacts:
          path: /Users/distiller/project/output

  beta-ios:
    macos:
      xcode: "9.2.0"
    working_directory: /Users/distiller/project/ios
    environment:
      FL_OUTPUT_DIR: /Users/distiller/project/output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: /Users/distiller/project
      - run:
          name: Set Ruby Version
          command:  echo "ruby-2.4" > ~/.ruby-version
      # Not using a workspace here as Node and Yarn versions
      # differ between the macOS image and the Docker containers above.
      - run: yarn
      - run:
          name: Generate .env
          command: node ./scripts/generate-dotenv.js
          working_directory: /Users/distiller/project
      - run: bundle install
      - run: echo -e "$FABRIC_API_KEY\n$FABRIC_BUILD_SECRET" >> ./PrideLondonApp/fabric.properties
      - run: 
            command: |
                bundle exec fastlane beta \
                submit:true \
                api_token:$HOCKEY_APP_TOKEN \
                app_id:$HOCKEY_APP_IOS_BETA_APP_ID \
                fabric_api_token:$FABRIC_API_KEY \
                fabric_build_secret:$FABRIC_BUILD_SECRET \
                fabric_groups:$FABRIC_GROUPS \
                ci_build_num:$CIRCLE_BUILD_NUM \
                commit_sha:$CIRCLE_SHA1

workflows:
  version: 2
  node-android-ios:
    jobs:
      - build
      - alpha-android:
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
      - alpha-ios:
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
      - beta-android:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - beta-ios:
          requires:
            - build
          filters:
            branches:
              only:
                - master

require 'httparty'

fastlane_version "2.80.0"
default_platform :ios

private_lane :githubStatusUpdate do |options|
  statusUrl = "https://#{ENV["GITHUB_USERNAME"]}:#{ENV["GITHUB_TOKEN"]}@api.github.com/repos/#{ENV["CIRCLE_PROJECT_USERNAME"]}/#{ENV["CIRCLE_PROJECT_REPONAME"]}/statuses/#{ENV["CIRCLE_SHA1"]}";

  response = HTTParty.post(
    statusUrl,
    :body => {
      :context => options[:context],
      :state => options[:state],
      :description => options[:description],
      :target_url => options[:url]
    }.to_json,
    :headers => { 'Content-Type' => 'application/json' }
  )
end

platform :ios do
  before_all do
    setup_circle_ci
  end

  desc "Runs all the tests"
  lane :test do
    scan(scheme: "PrideLondonApp")
  end

  desc "Signed simulator build"
  lane :build_sim do
    githubStatusUpdate(
      context: 'Appetize iOS',
      state: 'pending',
      url: "https://appetize.io/dashboard",
      description: 'iOS deployment in progress'
    )

    match(type: "appstore")

    tmp_path = "/tmp/fastlane_build"

    xcodebuild(
      configuration: "Release",
      sdk: "iphonesimulator",
      derivedDataPath: tmp_path,
      xcargs: "CONFIGURATION_BUILD_DIR=" + tmp_path,
      scheme: "PrideLondonApp"
    )

    app_path = Dir[File.join(tmp_path, "**", "*.app")].last

    zipped_bundle = zip(
      path: app_path, 
      output_path: File.join(tmp_path, "Result.zip")
    )

    appetize(
      path: zipped_bundle,
      platform: "ios"
    )

    githubStatusUpdate(
      context: 'Appetize iOS',
      state: 'success',
      url: "#{lane_context[SharedValues::APPETIZE_APP_URL]}",
      description: 'iOS build deployed'
    )
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  lane :beta do
    # fetch previously generated certificates, but don't generate new ones if none already exist
    match(type: "appstore", readonly: true)
    # ensure we're on the "master" git branch
    ensure_git_branch(branch: "master")
    # set the app build number from our previously generated config
    increment_build_number(
      build_number: latest_testflight_build_number + 1,
      xcodeproj: "PrideLondonApp.xcodeproj"
    )
    # build the app for app store export
    gym(
      clean: true,
      export_method: 'app-store',
      scheme: "PrideLondonApp",
      output_directory: "./build-tools/deploy/data"
    )
    # upload to TestFlight and notify testers
    testflight(
      skip_submission: true,
      distribute_external: false,
      skip_waiting_for_build_processing: true
    )
  end
end
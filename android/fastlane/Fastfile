fastlane_version "2.82.0"

default_platform :android

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Build application"
  lane :build_beta do
    gradle(
      task: 'assemble',
      build_type: 'Release',
      flavor: "beta",
    )
  end

  desc "Build alpha"
  lane :build_alpha do
    gradle(
      task: "assemble",
      build_type: "release",
      flavor: "alpha",
    )
  end

  desc "Build and deploy to Alpha lane"
  lane :alpha do |options|
    build_alpha
    if options[:submit]
      apk_path = "./app/build/outputs/apk/alpha/release/app-alpha-release.apk"
      notes = build_notes(options[:commit_sha])
      deploy_fabric(
        api_token: options[:fabric_api_token],
        build_secret: options[:fabric_build_secret],
        notes: notes,
        groups: options[:fabric_groups],
        notify: false,
      )
      deploy_hockey(
        commit_sha: options[:commit_sha],
        api_token: options[:api_token],
        app_id: options[:app_id],
        apk_path: apk_path,
        status: "2",
        notify: "0",
        notes: notes,
      )
    end
  end

  desc "Build and deploy to Beta lane"
  lane :beta do |options|
    build_beta
    if options[:submit]
      apk_path = "./app/build/outputs/apk/beta/release/app-beta-release.apk"
      notes = build_notes(options[:commit_sha])
      deploy_fabric(
        api_token: options[:fabric_api_token],
        build_secret: options[:fabric_build_secret],
        notes: notes,
        groups: options[:fabric_groups],
        notify: true,
      )
      deploy_hockey(
        commit_sha: options[:commit_sha],
        api_token: options[:api_token],
        app_id: options[:app_id],
        apk_path: apk_path,
        status: "2",
        notify: "1",
        notes: notes,
      )
    end
  end

  desc "Deploy to HockeyApp"
  lane :deploy_hockey do |options|
    hockey(
      api_token: options[:api_token],
      public_identifier: options[:app_id],
      apk: options[:apk_path],
      notes: options[:notes],
      status: options[:status],
      notify: options[:notify],
      commit_sha: options[:commit_sha]
    )
  end

  desc "Upload to Beta by Fabric"
  lane :deploy_fabric do |options|
    File.write("./notes.txt", options[:notes])
    crashlytics(
      api_token: options[:api_token],
      build_secret: options[:build_secret],
      apk_path: options[:apk_path],
      notes_path: "fastlane/notes.txt",
      groups: options[:groups],
      notifications: options[:notify]
    )
  end

  def build_notes(commit_sha)
    date = Time.now.strftime('%F')
    time = Time.now.strftime('%T')
    commit_msg = sh("git log --format=%B -n 1 #{commit_sha}").strip
    notes = "#{git_branch}/#{commit_msg} on #{date} at #{time}"
    return notes
  end
end
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with date selection 1`] = `
<Dialog
  applyButtonLabel="Apply selection"
  applyButtonText="Apply"
  headerRight={
    <Touchable
      accessibilityComponentType="button"
      accessibilityLabel="Clear date selection"
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={undefined}
      delayLongPress={undefined}
      delayPressIn={50}
      delayPressOut={undefined}
      disabled={undefined}
      hitSlop={undefined}
      onLongPress={undefined}
      onPress={[Function]}
      onPressIn={undefined}
      onPressOut={undefined}
      pressRetentionOffset={undefined}
      style={undefined}
    >
      <Text
        color="blackColor"
        markdown={false}
        markdownStyle={Object {}}
        style={
          Object {
            "color": "rgb(45, 47, 127)",
          }
        }
        type="small"
      >
        Clear
      </Text>
    </Touchable>
  }
  onApply={[Function]}
  onCancel={[Function]}
  title={
    <Text
      accessibilityLabel="Selected: 2 Feb , pick another day to select range"
      accessibilityLiveRegion="polite"
      accessibilityTraits={
        Array [
          "header",
        ]
      }
      accessible={true}
      color="blackColor"
      markdown={false}
      markdownStyle={Object {}}
      style={
        Object {
          "alignSelf": "flex-end",
          "color": "rgb(45, 47, 127)",
          "height": 40,
          "paddingTop": 10,
        }
      }
      type="h3"
    >
      2 Feb -
    </Text>
  }
  visible={true}
>
  <DateRangePicker
    dateRange={
      Object {
        "endDate": "2018-02-02",
        "startDate": "2018-02-02",
      }
    }
    forceNewRange={false}
    onChange={[Function]}
  />
</Dialog>
`;

exports[`renders correctly with range selection 1`] = `
<Dialog
  applyButtonLabel="Apply selection"
  applyButtonText="Apply"
  headerRight={
    <Touchable
      accessibilityComponentType="button"
      accessibilityLabel="Clear date selection"
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={undefined}
      delayLongPress={undefined}
      delayPressIn={50}
      delayPressOut={undefined}
      disabled={undefined}
      hitSlop={undefined}
      onLongPress={undefined}
      onPress={[Function]}
      onPressIn={undefined}
      onPressOut={undefined}
      pressRetentionOffset={undefined}
      style={undefined}
    >
      <Text
        color="blackColor"
        markdown={false}
        markdownStyle={Object {}}
        style={
          Object {
            "color": "rgb(45, 47, 127)",
          }
        }
        type="small"
      >
        Clear
      </Text>
    </Touchable>
  }
  onApply={[Function]}
  onCancel={[Function]}
  title={
    <Text
      accessibilityLabel="Selected: 2 Feb - 8 Feb "
      accessibilityLiveRegion="polite"
      accessibilityTraits={
        Array [
          "header",
        ]
      }
      accessible={true}
      color="blackColor"
      markdown={false}
      markdownStyle={Object {}}
      style={
        Object {
          "alignSelf": "flex-end",
          "color": "rgb(45, 47, 127)",
          "height": 40,
          "paddingTop": 10,
        }
      }
      type="h3"
    >
      2 Feb - 8 Feb
    </Text>
  }
  visible={true}
>
  <DateRangePicker
    dateRange={
      Object {
        "endDate": "2018-02-08",
        "startDate": "2018-02-02",
      }
    }
    forceNewRange={false}
    onChange={[Function]}
  />
</Dialog>
`;

exports[`renders correctly without date selection 1`] = `
<Dialog
  applyButtonLabel="Apply selection"
  applyButtonText="Apply"
  headerRight={
    <Touchable
      accessibilityComponentType="button"
      accessibilityLabel="Clear date selection"
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={undefined}
      delayLongPress={undefined}
      delayPressIn={50}
      delayPressOut={undefined}
      disabled={undefined}
      hitSlop={undefined}
      onLongPress={undefined}
      onPress={[Function]}
      onPressIn={undefined}
      onPressOut={undefined}
      pressRetentionOffset={undefined}
      style={undefined}
    >
      <Text
        color="blackColor"
        markdown={false}
        markdownStyle={Object {}}
        style={
          Object {
            "color": "rgb(45, 47, 127)",
          }
        }
        type="small"
      >
        Clear
      </Text>
    </Touchable>
  }
  onApply={[Function]}
  onCancel={[Function]}
  title={
    <Text
      accessibilityLabel="Select dates"
      accessibilityLiveRegion="polite"
      accessibilityTraits={
        Array [
          "header",
        ]
      }
      accessible={true}
      color="blackColor"
      markdown={false}
      markdownStyle={Object {}}
      style={
        Object {
          "alignSelf": "flex-end",
          "color": "rgb(45, 47, 127)",
          "height": 40,
          "paddingTop": 10,
        }
      }
      type="h3"
    >
      Select dates
    </Text>
  }
  visible={true}
>
  <DateRangePicker
    dateRange={null}
    forceNewRange={false}
    onChange={[Function]}
  />
</Dialog>
`;
